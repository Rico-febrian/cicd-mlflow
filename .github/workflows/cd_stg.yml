name: CD_STG

on:
    push:
        branches: [ "main" ]

permissions:
    contents: read

jobs:
    build-push:
        runs-on: ubuntu-latest
        steps:
        - uses: actions/checkout@v4
        - name: Set up Python 3.12
          uses: actions/setup-python@v3
          with:
            python-version: "3.12"
        - name: Login to Docker Hub
          uses: docker/login-action@v2
          with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN }}
        - name: Create .env file
          run: |
            echo "MLFLOW_TRACKING_USERNAME=${{ secrets.MLFLOW_TRACKING_USERNAME }}" >> .env
            echo "MLFLOW_TRACKING_PASSWORD=${{ secrets.MLFLOW_TRACKING_PASSWORD }}" >> .env
            echo "MLFLOW_TRACKING_URI=${{ secrets.MLFLOW_TRACKING_URI }}" >> .env
            echo "MODEL_ALIAS=${{ secrets.MODEL_ALIAS_STG }}" >> .env
        - name: Build container
          run: |
            docker compose build
            docker compose push
        
    deploy:
        runs-on: ubuntu-latest
        needs: build-push
        steps:
        - uses: actions/checkout@v4
        - name: Creating SSH config file
          env:
            SSH_USER: ${{ secrets.SSH_USER_STG }}
            SSH_KEY: ${{ secrets.SSH_KEY_STG }}
            SSH_HOST: ${{ secrets.SSH_HOST_STG }}
          run: |
            mkdir -p ~/.ssh/
            echo "$SSH_KEY" > ~/.ssh/deployment.pem
            chmod 600 ~/.ssh/deployment.pem
            cat >> ~/.ssh/config <<END
            Host deploy_ec2
                HostName $SSH_HOST
                User $SSH_USER
                IdentityFile ~/.ssh/deployment.pem
                StrictHostKeyChecking no
            END
        - name: Create .env file
          run: |
            echo "MLFLOW_TRACKING_USERNAME=${{ secrets.MLFLOW_TRACKING_USERNAME }}" >> .env
            echo "MLFLOW_TRACKING_PASSWORD=${{ secrets.MLFLOW_TRACKING_PASSWORD }}" >> .env
            echo "MLFLOW_TRACKING_URI=${{ secrets.MLFLOW_TRACKING_URI }}" >> .env
            echo "MODEL_ALIAS=${{ secrets.MODEL_ALIAS_STG }}" >> .env
        - name: Deploy to EC2 staging server
          run: |
            ssh deploy_ec2 "rm -f docker-compose.yaml"
            scp docker-compose.yaml .env deploy_ec2:.
            ssh deploy_ec2 "sudo docker compose down && sudo docker system prune -af"
            ssh deploy_ec2 "sudo docker compose pull && sudo docker compose up api_stg_1 api_stg_2 -d"

